version: "3.9"
services:
  gateway:
    build: ./gateway
    command: npm run dev
    env_file: ./gateway/.env
    ports: ["3000:3000"]
    depends_on: [db, ai, redis, minio, createbuckets]
    volumes:
      - ./gateway:/usr/src/app
  ai:
    build: ./ai-service
    command: bash -lc "uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload"
    env_file: ./ai-service/.env
    ports: ["8000:8000"]
    volumes:
      - ./ai-service:/app
      - ./ai-service/data:/app/data:rw
    environment:
      - DATA_ROOT=/app/data
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports: ["5432:5432"]
    volumes:
      - pgdata:/var/lib/postgresql/data
  redis:
    image: redis:7
    ports: ["6379:6379"]
  minio:
    image: minio/minio:RELEASE.2024-05-10T01-41-38Z
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    ports: ["9000:9000","9001:9001"]
    volumes:
      - minio:/data
  createbuckets:
    image: minio/mc
    depends_on: [minio]
    entrypoint: ["/bin/sh","-c"]
    command: >
      "mc alias set local http://minio:9000 ${MINIO_ROOT_USER} ${MINIO_ROOT_PASSWORD};
      mc mb --ignore-existing local/${S3_BUCKET};
      mc anonymous set download local/${S3_BUCKET};
      sleep 1;"
volumes:
  pgdata: {}
  minio: {}